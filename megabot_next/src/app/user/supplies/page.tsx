'use client';

import { useEffect, useState } from 'react';
import { useSession } from 'next-auth/react';
import { useToast } from '@/lib/ToastProvider';
import { Supply } from '@/types/types';
import Thing from '@/components/layout/Thing';
import Modal from '@/components/system/Modal';
import SupplyForm from '@/components/forms/SupplyForm';

export default function SuppliesPage() {
	const { data: session } = useSession();
	const { showSuccess, showError } = useToast();

	const [supplies, setSupplies] = useState<Supply[]>([]);
	const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);
	const [isEditModalOpen, setIsEditModalOpen] = useState(false);
	const [editingSupply, setEditingSupply] = useState<Supply | null>(null);

	// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å—Ç–∞–≤–æ–∫
	useEffect(() => {
		const fetchSupplies = async () => {
			try {
				const response = await fetch('/api/user/data');
				const data = await response.json();
				if (data.user?.supplies) {
					setSupplies(data.user.supplies);
				}
			} catch (error) {
				console.error('Error fetching supplies:', error);
				showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ—Å—Ç–∞–≤–æ–∫');
			}
		};

		if (session) {
			fetchSupplies();
		}
	}, [session]);

	return (
		<>
			<div className='sticker'>
				<h2 className='sticker-header'>–¢–≤–æ–∏ –ø–æ—Å—Ç–∞–≤–∫–∏</h2>
				<button
					onClick={() => setIsCreateModalOpen(true)}
					className='btn btn-g'>
					<span className='btn-label'>–î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç–∞–≤–∫—É</span>
				</button>
			</div>

			<div className='content-container'>
				{supplies.length === 0 ? (
					<>
						<Thing emoji='üëÜ'>
							–î–æ–±–∞–≤—å –ø–µ—Ä–≤—É—é –ø–æ—Å—Ç–∞–≤–∫—É. –ù–∞–∂–º–∏ –Ω–∞ –∑–µ–ª—ë–Ω—É—é –∫–Ω–æ–ø–∫—É.
						</Thing>
						<Thing emoji='‚ö°'>
							–Ø –±—É–¥—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª–æ—Ç—ã –¥–ª—è —Ç–≤–æ–∏—Ö –ø–æ—Å—Ç–∞–≤–æ–∫.
						</Thing>
						<Thing emoji='‚è∞'>
							–ü—Ä–æ–≤–µ—Ä—è—é –Ω–∞–ª–∏—á–∏–µ —Å–ª–æ—Ç–æ–≤ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥.
						</Thing>
					</>
				) : (
					<div className='cards'>
						{supplies.map((supply) => (
							<div key={supply._id} className='supply-card'>
								{/* –í—Ä–µ–º–µ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞, –ø–æ–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–¥–∏–º SupplyCard */}
								<h3>–ü–æ—Å—Ç–∞–≤–∫–∞ {supply.preorder_id}</h3>
								<button
									onClick={() => {
										setEditingSupply(supply);
										setIsEditModalOpen(true);
									}}
									className='btn btn-o'>
									–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
								</button>
							</div>
						))}
					</div>
				)}
			</div>

			{/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞–≤–∫–∏ */}
			<Modal
				isOpen={isCreateModalOpen}
				onClose={() => setIsCreateModalOpen(false)}
				title='–î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç–∞–≤–∫—É'
				className='card-g'>
				{({ handleClose }) => (
					<SupplyForm
						onSuccess={(newSupply) => {
							setSupplies((prev) => [...prev, newSupply]);
							handleClose();
							showSuccess('–ü–æ—Å—Ç–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞');
						}}
						onError={(error) => {
							showError(error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞–≤–∫–∏');
						}}
					/>
				)}
			</Modal>

			{/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–∞–≤–∫–∏ */}
			<Modal
				isOpen={isEditModalOpen}
				onClose={() => setIsEditModalOpen(false)}
				title='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç–∞–≤–∫—É'
				className='card-o'>
				{({ handleClose }) =>
					editingSupply && (
						<SupplyForm
							initialData={editingSupply}
							onSuccess={(updatedSupply) => {
								setSupplies((prev) =>
									prev.map((s) =>
										s._id === editingSupply._id ? updatedSupply : s
									)
								);
								handleClose();
								showSuccess('–ü–æ—Å—Ç–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
							}}
							onError={(error) => {
								showError(error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞–≤–∫–∏');
							}}
						/>
					)
				}
			</Modal>
		</>
	);
}
