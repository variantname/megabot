'use client';

import { useEffect, useState } from 'react';
import { signIn, useSession } from 'next-auth/react';
import { useRouter } from 'next/navigation';
import Link from 'next/link';
import { useUser } from '@/lib/UserProvider';
import LoadingPage from '@/components/layout/LoadingPage';

export default function LoginPage() {
	const { data: session, status } = useSession();
	const { hasInn, loading: userLoading } = useUser();
	const router = useRouter();
	const [error, setError] = useState('');
	const [loading, setLoading] = useState(false);

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –ò–ù–ù
	useEffect(() => {
		if (status === 'authenticated' && !userLoading) {
			if (hasInn) {
				router.push('/user/supplies');
			} else {
				router.push('/user/sellers');
			}
		}
	}, [status, hasInn, userLoading, router]);

	const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
		e.preventDefault();
		setError('');
		setLoading(true);

		const formData = new FormData(e.currentTarget);
		const email = formData.get('email') as string;
		const password = formData.get('password') as string;

		try {
			const result = await signIn('credentials', {
				email,
				password,
				redirect: false,
			});

			if (result?.error) {
				switch (result.error) {
					case 'CredentialsSignin':
						setError('–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å');
						break;
					default:
						setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ');
				}
			}
			// –£–±–∏—Ä–∞–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç –æ—Ç—Å—é–¥–∞, –æ–Ω –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å —á–µ—Ä–µ–∑ useEffect
		} catch (err) {
			console.error('Login error:', err);
			setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ —Å–µ—Ä–≤–µ—Ä—É');
		} finally {
			setLoading(false);
		}
	};

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–∏ –ª—é–±—ã—Ö –ø—Ä–æ–≤–µ—Ä–∫–∞—Ö —Å—Ç–∞—Ç—É—Å–∞
	if (
		status === 'loading' ||
		loading ||
		(status === 'authenticated' && userLoading)
	) {
		return <LoadingPage />;
	}

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–æ—á–Ω–æ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
	if (status === 'unauthenticated') {
		return (
			<div className='content-container'>
				<div className='flex flex-col items-center justify-center'>
					<div className='flex justify-center'>
						<h2 className='card-hello'>
							<div className='hello-emoji'>‚ù§Ô∏è</div>
							<div className='hello-human'>
								–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, <br />
								–ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –ß–µ–ª–æ–≤–µ–∫
							</div>
						</h2>
					</div>

					<div className='card bg-base-200 shadow-xl card-login'>
						<div className='card-body'>
							{error && (
								<div className='alert alert-error mb-4'>{error}</div>
							)}

							<form onSubmit={handleSubmit}>
								<div className='form-control w-full'>
									<label className='label'>
										<span className='label-text'>Email</span>
									</label>
									<input
										name='email'
										type='email'
										placeholder='your@email.com'
										className='input input-bordered w-full'
										required
									/>
								</div>

								<div className='form-control w-full my-3'>
									<label className='label'>
										<span className='label-text'>–ü–∞—Ä–æ–ª—å</span>
									</label>
									<input
										name='password'
										type='password'
										placeholder='‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢'
										className='input input-bordered w-full'
										required
									/>
								</div>

								<button
									className='btn btn-primary w-full mt-6'
									disabled={loading}>
									{loading ? '–í—Ö–æ–∂—É...' : '–í–æ–π—Ç–∏'}
								</button>

								<div className='text-center'>
									<div className='text-lg my-3'>–∏–ª–∏</div>
									<Link
										href='/register'
										className='btn btn-secondary w-full'>
										–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
									</Link>
								</div>

								<div className='text-center'>
									<div className='text-lg my-3'>ü§¶ –ê–∞–∞...!!!</div>
									<Link
										href='/forgot-password'
										className='btn btn-accent w-full'>
										–Ø –∑–∞–±—ã–ª –ø–∞—Ä–æ–ª—å...
									</Link>
								</div>
							</form>
						</div>
					</div>
				</div>
			</div>
		);
	}

	// –í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
	return <LoadingPage />;
}
